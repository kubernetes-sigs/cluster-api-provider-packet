# workflow to release assets as part of the release
name: Upload Release Asset
on:
  push:
    tags:
    - 'v*'
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  manager-image:
    name: Build and push manager image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2.3.5
    - uses: ./.github/actions/setup-go
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-manager-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-manager-
          ${{ runner.os }}-buildx-
    - name: Docker manager metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        flavor: latest=false
        tags: type=ref,event=tag
    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup Env
      run: |
        DOCKER_BUILD_LDFLAGS="$(hack/version.sh)"
        echo 'DOCKER_BUILD_LDFLAGS<<EOF' >> $GITHUB_ENV
        echo $DOCKER_BUILD_LDFLAGS >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
    - name: Build and push manager image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        build-args: |
          LDFLAGS=${{ env.DOCKER_BUILD_LDFLAGS }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
    - name: Move cache
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
    - manager-image
    steps:
    - name: Checkout code
      uses: actions/checkout@v2.3.5
    - uses: ./.github/actions/setup-go
    - uses: actions/cache@v2
      with:
        path: hack/tools/bin
        key: ${{ runner.os }}-tools-bin-release-${{ hashFiles('Makefile') }}
        restore-keys: |
          ${{ runner.os }}-tools-bin-release-
          ${{ runner.os }}-tools-bin-
    - name: Docker manager metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        flavor: latest=false
        tags: type=ref,event=tag
    - name: manifest
      run: make release
      env:
        TAG: ${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
    - name: Generate Release Notes
      run: |
        release_notes=$(gh api repos/{owner}/{repo}/releases/generate-notes -F tag_name=${{ github.ref }} --jq .body)
        echo 'RELEASE_NOTES<<EOF' >> $GITHUB_ENV
        echo "${release_notes}" >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OWNER: ${{ github.repository_owner }}
        REPO: ${{ github.event.repository.name }}
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: out/release/*
        body: ${{ env.RELEASE_NOTES }}
        draft: false
        prerelease: false
